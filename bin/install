#!/usr/bin/env bash

set -euo pipefail

[ -z "${ASDF_INSTALL_TYPE+x}" ] && echo "ASDF_INSTALL_TYPE is required" && exit 1
[ -z "${ASDF_INSTALL_VERSION+x}" ] && echo "ASDF_INSTALL_VERSION is required" && exit 1
[ -z "${ASDF_INSTALL_PATH+x}" ] && echo "ASDF_INSTALL_PATH is required" && exit 1

function ver {
  printf "%03d%03d%03d%03d" $(echo "$1" | tr '.' ' ');
}

install() {
  local install_type=$1
  [ "$install_type" != "version" ] && echo "install type, $install_type, is not supported" && exit 1

  local version=$2
  local install_path=$3

  local bin_install_path="$install_path/bin"
  local bin_path="${bin_install_path}/calicoctl"

  # Use the legacy repo if the version is before 3.22.1
  base_url="https://github.com/projectcalico/calico"
  if [ "$(ver $version)" -lt "$(ver 3.22.1)" ]; then
    base_url="https://github.com/projectcalico/calicoctl"
  fi

  local download_url
  download_url="${base_url}/releases/download/v${version}/calicoctl-$(platform)-$(arch)"

  mkdir -p "${bin_install_path}"

  echo "Downloading calicoctl from ${download_url}"
  curl -sSfL "$download_url" -o "$bin_path"
  chmod +x "$bin_path"
}

platform() {
  uname | tr '[:upper:]' '[:lower:]'
}

arch() {
  [ "x86_64" = "$(uname -m)" ] && echo -n "amd64" || uname -m
}

install "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"

